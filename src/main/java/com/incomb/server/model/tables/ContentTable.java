/**
 * This class is generated by jOOQ
 */
package com.incomb.server.model.tables;

/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContentTable extends org.jooq.impl.TableImpl<com.incomb.server.model.records.ContentRecord> {

	private static final long serialVersionUID = 1129233204;

	/**
	 * The reference instance of <code>incomb.content</code>
	 */
	public static final com.incomb.server.model.tables.ContentTable CONTENT = new com.incomb.server.model.tables.ContentTable();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<com.incomb.server.model.records.ContentRecord> getRecordType() {
		return com.incomb.server.model.records.ContentRecord.class;
	}

	/**
	 * The column <code>incomb.content.id</code>.
	 */
	public final org.jooq.TableField<com.incomb.server.model.records.ContentRecord, java.lang.Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>incomb.content.provider_id</code>.
	 */
	public final org.jooq.TableField<com.incomb.server.model.records.ContentRecord, java.lang.Integer> PROVIDER_ID = createField("provider_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>incomb.content.category_id</code>.
	 */
	public final org.jooq.TableField<com.incomb.server.model.records.ContentRecord, java.lang.Integer> CATEGORY_ID = createField("category_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>incomb.content.title</code>.
	 */
	public final org.jooq.TableField<com.incomb.server.model.records.ContentRecord, java.lang.String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>incomb.content.locale</code>.
	 */
	public final org.jooq.TableField<com.incomb.server.model.records.ContentRecord, java.lang.String> LOCALE = createField("locale", org.jooq.impl.SQLDataType.VARCHAR.length(5).nullable(false), this, "");

	/**
	 * The column <code>incomb.content.text</code>.
	 */
	public final org.jooq.TableField<com.incomb.server.model.records.ContentRecord, java.lang.String> TEXT = createField("text", org.jooq.impl.SQLDataType.CLOB.length(16777215).nullable(false), this, "");

	/**
	 * The column <code>incomb.content.publish_date</code>.
	 */
	public final org.jooq.TableField<com.incomb.server.model.records.ContentRecord, java.sql.Timestamp> PUBLISH_DATE = createField("publish_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>incomb.content.indexed</code>.
	 */
	public final org.jooq.TableField<com.incomb.server.model.records.ContentRecord, java.lang.Boolean> INDEXED = createField("indexed", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "");

	/**
	 * Create a <code>incomb.content</code> table reference
	 */
	public ContentTable() {
		this("content", null);
	}

	/**
	 * Create an aliased <code>incomb.content</code> table reference
	 */
	public ContentTable(java.lang.String alias) {
		this(alias, com.incomb.server.model.tables.ContentTable.CONTENT);
	}

	private ContentTable(java.lang.String alias, org.jooq.Table<com.incomb.server.model.records.ContentRecord> aliased) {
		this(alias, aliased, null);
	}

	private ContentTable(java.lang.String alias, org.jooq.Table<com.incomb.server.model.records.ContentRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, com.incomb.server.model.tables.IncombTable.INCOMB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<com.incomb.server.model.records.ContentRecord, java.lang.Long> getIdentity() {
		return com.incomb.server.model.tables.Keys.IDENTITY_CONTENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<com.incomb.server.model.records.ContentRecord> getPrimaryKey() {
		return com.incomb.server.model.tables.Keys.KEY_CONTENT_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<com.incomb.server.model.records.ContentRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<com.incomb.server.model.records.ContentRecord>>asList(com.incomb.server.model.tables.Keys.KEY_CONTENT_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<com.incomb.server.model.records.ContentRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<com.incomb.server.model.records.ContentRecord, ?>>asList(com.incomb.server.model.tables.Keys.FK_CONTENT_PROVIDER1, com.incomb.server.model.tables.Keys.FK_CONTENT_CATEGORY1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public com.incomb.server.model.tables.ContentTable as(java.lang.String alias) {
		return new com.incomb.server.model.tables.ContentTable(alias, this);
	}

	/**
	 * Rename this table
	 */
	public com.incomb.server.model.tables.ContentTable rename(java.lang.String name) {
		return new com.incomb.server.model.tables.ContentTable(name, null);
	}
}
