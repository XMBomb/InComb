/**
 * This class is generated by jOOQ
 */
package com.incomb.server.model.dao.internal;

/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InternalFetchHistoryDao extends org.jooq.impl.DAOImpl<com.incomb.server.model.records.FetchHistoryRecord, com.incomb.server.model.FetchHistory, org.jooq.Record2<java.lang.Integer, java.sql.Timestamp>> {

	/**
	 * Create a new InternalFetchHistoryDao without any configuration
	 */
	public InternalFetchHistoryDao() {
		super(com.incomb.server.model.tables.FetchHistoryTable.FETCH_HISTORY, com.incomb.server.model.FetchHistory.class);
	}

	/**
	 * Create a new InternalFetchHistoryDao with an attached configuration
	 */
	public InternalFetchHistoryDao(org.jooq.Configuration configuration) {
		super(com.incomb.server.model.tables.FetchHistoryTable.FETCH_HISTORY, com.incomb.server.model.FetchHistory.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected org.jooq.Record2<java.lang.Integer, java.sql.Timestamp> getId(com.incomb.server.model.FetchHistory object) {
		return compositeKeyRecord(object.getContentSourceId(), object.getFetchTime());
	}

	/**
	 * Fetch records that have <code>content_source_id IN (values)</code>
	 */
	public java.util.List<com.incomb.server.model.FetchHistory> fetchByContentSourceId(java.lang.Integer... values) {
		return fetch(com.incomb.server.model.tables.FetchHistoryTable.FETCH_HISTORY.CONTENT_SOURCE_ID, values);
	}

	/**
	 * Fetch records that have <code>fetch_time IN (values)</code>
	 */
	public java.util.List<com.incomb.server.model.FetchHistory> fetchByFetchTime(java.sql.Timestamp... values) {
		return fetch(com.incomb.server.model.tables.FetchHistoryTable.FETCH_HISTORY.FETCH_TIME, values);
	}

	/**
	 * Fetch records that have <code>result IN (values)</code>
	 */
	public java.util.List<com.incomb.server.model.FetchHistory> fetchByResult(java.lang.Boolean... values) {
		return fetch(com.incomb.server.model.tables.FetchHistoryTable.FETCH_HISTORY.RESULT, values);
	}
}
